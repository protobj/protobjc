// Code generated from D:/code/protobjc/protobjc-java/src/main/resources\Protobj.g4 by ANTLR 4.10.1. DO NOT EDIT.

package antlr

import (
	"fmt"
	"sync"
	"unicode"

	"github.com/antlr/antlr4/runtime/Go/antlr"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = sync.Once{}
var _ = unicode.IsLetter

type ProtobjLexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

var protobjlexerLexerStaticData struct {
	once                   sync.Once
	serializedATN          []int32
	channelNames           []string
	modeNames              []string
	literalNames           []string
	symbolicNames          []string
	ruleNames              []string
	predictionContextCache *antlr.PredictionContextCache
	atn                    *antlr.ATN
	decisionToDFA          []*antlr.DFA
}

func protobjlexerLexerInit() {
	staticData := &protobjlexerLexerStaticData
	staticData.channelNames = []string{
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	}
	staticData.modeNames = []string{
		"DEFAULT_MODE",
	}
	staticData.literalNames = []string{
		"", "'import'", "'package'", "'lst'", "'map'", "'bool'", "'i8'", "'u8'",
		"'i16'", "'u16'", "'i32'", "'u32'", "'s32'", "'f32'", "'sf32'", "'i64'",
		"'u64'", "'s64'", "'f64'", "'sf64'", "'string'", "'double'", "'float'",
		"'enum'", "'message'", "'ext'", "'set'", "'arr'", "'dft'", "';'", "'='",
		"'('", "')'", "'['", "']'", "'{'", "'}'", "'<'", "'>'", "'.'", "','",
		"':'", "'+'", "'-'",
	}
	staticData.symbolicNames = []string{
		"", "IMPORT", "PACKAGE", "REPEATED", "MAP", "BOOL", "I8", "U8", "I16",
		"U16", "I32", "U32", "S32", "F32", "SF32", "I64", "U64", "S64", "F64",
		"SF64", "STRING", "DOUBLE", "FLOAT", "ENUM", "MESSAGE", "EXTEND", "SET",
		"ARRAY", "DEFAULT", "SEMI", "EQ", "LP", "RP", "LB", "RB", "LC", "RC",
		"LT", "GT", "DOT", "COMMA", "COLON", "PLUS", "MINUS", "STR_LIT", "BOOL_LIT",
		"FLOAT_LIT", "INT_LIT", "IDENTIFIER", "WS", "LINE_COMMENT", "COMMENT",
	}
	staticData.ruleNames = []string{
		"IMPORT", "PACKAGE", "REPEATED", "MAP", "BOOL", "I8", "U8", "I16", "U16",
		"I32", "U32", "S32", "F32", "SF32", "I64", "U64", "S64", "F64", "SF64",
		"STRING", "DOUBLE", "FLOAT", "ENUM", "MESSAGE", "EXTEND", "SET", "ARRAY",
		"DEFAULT", "SEMI", "EQ", "LP", "RP", "LB", "RB", "LC", "RC", "LT", "GT",
		"DOT", "COMMA", "COLON", "PLUS", "MINUS", "STR_LIT", "CHAR_VALUE", "HEX_ESCAPE",
		"OCT_ESCAPE", "CHAR_ESCAPE", "BOOL_LIT", "FLOAT_LIT", "EXPONENT", "DECIMALS",
		"INT_LIT", "DECIMAL_LIT", "OCTAL_LIT", "HEX_LIT", "IDENTIFIER", "LETTER",
		"DECIMAL_DIGIT", "OCTAL_DIGIT", "HEX_DIGIT", "WS", "LINE_COMMENT", "COMMENT",
	}
	staticData.predictionContextCache = antlr.NewPredictionContextCache()
	staticData.serializedATN = []int32{
		4, 0, 51, 452, 6, -1, 2, 0, 7, 0, 2, 1, 7, 1, 2, 2, 7, 2, 2, 3, 7, 3, 2,
		4, 7, 4, 2, 5, 7, 5, 2, 6, 7, 6, 2, 7, 7, 7, 2, 8, 7, 8, 2, 9, 7, 9, 2,
		10, 7, 10, 2, 11, 7, 11, 2, 12, 7, 12, 2, 13, 7, 13, 2, 14, 7, 14, 2, 15,
		7, 15, 2, 16, 7, 16, 2, 17, 7, 17, 2, 18, 7, 18, 2, 19, 7, 19, 2, 20, 7,
		20, 2, 21, 7, 21, 2, 22, 7, 22, 2, 23, 7, 23, 2, 24, 7, 24, 2, 25, 7, 25,
		2, 26, 7, 26, 2, 27, 7, 27, 2, 28, 7, 28, 2, 29, 7, 29, 2, 30, 7, 30, 2,
		31, 7, 31, 2, 32, 7, 32, 2, 33, 7, 33, 2, 34, 7, 34, 2, 35, 7, 35, 2, 36,
		7, 36, 2, 37, 7, 37, 2, 38, 7, 38, 2, 39, 7, 39, 2, 40, 7, 40, 2, 41, 7,
		41, 2, 42, 7, 42, 2, 43, 7, 43, 2, 44, 7, 44, 2, 45, 7, 45, 2, 46, 7, 46,
		2, 47, 7, 47, 2, 48, 7, 48, 2, 49, 7, 49, 2, 50, 7, 50, 2, 51, 7, 51, 2,
		52, 7, 52, 2, 53, 7, 53, 2, 54, 7, 54, 2, 55, 7, 55, 2, 56, 7, 56, 2, 57,
		7, 57, 2, 58, 7, 58, 2, 59, 7, 59, 2, 60, 7, 60, 2, 61, 7, 61, 2, 62, 7,
		62, 2, 63, 7, 63, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 1, 3, 1, 3,
		1, 3, 1, 3, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 5, 1, 5, 1, 5, 1, 6, 1, 6,
		1, 6, 1, 7, 1, 7, 1, 7, 1, 7, 1, 8, 1, 8, 1, 8, 1, 8, 1, 9, 1, 9, 1, 9,
		1, 9, 1, 10, 1, 10, 1, 10, 1, 10, 1, 11, 1, 11, 1, 11, 1, 11, 1, 12, 1,
		12, 1, 12, 1, 12, 1, 13, 1, 13, 1, 13, 1, 13, 1, 13, 1, 14, 1, 14, 1, 14,
		1, 14, 1, 15, 1, 15, 1, 15, 1, 15, 1, 16, 1, 16, 1, 16, 1, 16, 1, 17, 1,
		17, 1, 17, 1, 17, 1, 18, 1, 18, 1, 18, 1, 18, 1, 18, 1, 19, 1, 19, 1, 19,
		1, 19, 1, 19, 1, 19, 1, 19, 1, 20, 1, 20, 1, 20, 1, 20, 1, 20, 1, 20, 1,
		20, 1, 21, 1, 21, 1, 21, 1, 21, 1, 21, 1, 21, 1, 22, 1, 22, 1, 22, 1, 22,
		1, 22, 1, 23, 1, 23, 1, 23, 1, 23, 1, 23, 1, 23, 1, 23, 1, 23, 1, 24, 1,
		24, 1, 24, 1, 24, 1, 25, 1, 25, 1, 25, 1, 25, 1, 26, 1, 26, 1, 26, 1, 26,
		1, 27, 1, 27, 1, 27, 1, 27, 1, 28, 1, 28, 1, 29, 1, 29, 1, 30, 1, 30, 1,
		31, 1, 31, 1, 32, 1, 32, 1, 33, 1, 33, 1, 34, 1, 34, 1, 35, 1, 35, 1, 36,
		1, 36, 1, 37, 1, 37, 1, 38, 1, 38, 1, 39, 1, 39, 1, 40, 1, 40, 1, 41, 1,
		41, 1, 42, 1, 42, 1, 43, 1, 43, 5, 43, 295, 8, 43, 10, 43, 12, 43, 298,
		9, 43, 1, 43, 1, 43, 1, 43, 5, 43, 303, 8, 43, 10, 43, 12, 43, 306, 9,
		43, 1, 43, 3, 43, 309, 8, 43, 1, 44, 1, 44, 1, 44, 1, 44, 3, 44, 315, 8,
		44, 1, 45, 1, 45, 1, 45, 1, 45, 1, 45, 1, 46, 1, 46, 1, 46, 1, 46, 1, 46,
		1, 47, 1, 47, 1, 47, 1, 48, 1, 48, 1, 48, 1, 48, 1, 48, 1, 48, 1, 48, 1,
		48, 1, 48, 3, 48, 339, 8, 48, 1, 49, 1, 49, 1, 49, 3, 49, 344, 8, 49, 1,
		49, 3, 49, 347, 8, 49, 1, 49, 1, 49, 1, 49, 1, 49, 1, 49, 1, 49, 3, 49,
		355, 8, 49, 3, 49, 357, 8, 49, 1, 49, 1, 49, 1, 49, 1, 49, 1, 49, 1, 49,
		3, 49, 365, 8, 49, 1, 50, 1, 50, 1, 50, 3, 50, 370, 8, 50, 1, 50, 1, 50,
		1, 51, 4, 51, 375, 8, 51, 11, 51, 12, 51, 376, 1, 52, 1, 52, 1, 52, 3,
		52, 382, 8, 52, 1, 53, 1, 53, 5, 53, 386, 8, 53, 10, 53, 12, 53, 389, 9,
		53, 1, 54, 1, 54, 5, 54, 393, 8, 54, 10, 54, 12, 54, 396, 9, 54, 1, 55,
		1, 55, 1, 55, 4, 55, 401, 8, 55, 11, 55, 12, 55, 402, 1, 56, 1, 56, 1,
		56, 5, 56, 408, 8, 56, 10, 56, 12, 56, 411, 9, 56, 1, 57, 1, 57, 1, 58,
		1, 58, 1, 59, 1, 59, 1, 60, 1, 60, 1, 61, 4, 61, 422, 8, 61, 11, 61, 12,
		61, 423, 1, 61, 1, 61, 1, 62, 1, 62, 1, 62, 1, 62, 5, 62, 432, 8, 62, 10,
		62, 12, 62, 435, 9, 62, 1, 62, 1, 62, 1, 63, 1, 63, 1, 63, 1, 63, 5, 63,
		443, 8, 63, 10, 63, 12, 63, 446, 9, 63, 1, 63, 1, 63, 1, 63, 1, 63, 1,
		63, 3, 296, 304, 444, 0, 64, 1, 1, 3, 2, 5, 3, 7, 4, 9, 5, 11, 6, 13, 7,
		15, 8, 17, 9, 19, 10, 21, 11, 23, 12, 25, 13, 27, 14, 29, 15, 31, 16, 33,
		17, 35, 18, 37, 19, 39, 20, 41, 21, 43, 22, 45, 23, 47, 24, 49, 25, 51,
		26, 53, 27, 55, 28, 57, 29, 59, 30, 61, 31, 63, 32, 65, 33, 67, 34, 69,
		35, 71, 36, 73, 37, 75, 38, 77, 39, 79, 40, 81, 41, 83, 42, 85, 43, 87,
		44, 89, 0, 91, 0, 93, 0, 95, 0, 97, 45, 99, 46, 101, 0, 103, 0, 105, 47,
		107, 0, 109, 0, 111, 0, 113, 48, 115, 0, 117, 0, 119, 0, 121, 0, 123, 49,
		125, 50, 127, 51, 1, 0, 11, 3, 0, 0, 0, 10, 10, 92, 92, 2, 0, 88, 88, 120,
		120, 9, 0, 34, 34, 39, 39, 92, 92, 97, 98, 102, 102, 110, 110, 114, 114,
		116, 116, 118, 118, 2, 0, 69, 69, 101, 101, 1, 0, 49, 57, 3, 0, 65, 90,
		95, 95, 97, 122, 1, 0, 48, 57, 1, 0, 48, 55, 3, 0, 48, 57, 65, 70, 97,
		102, 3, 0, 9, 10, 12, 13, 32, 32, 2, 0, 10, 10, 13, 13, 465, 0, 1, 1, 0,
		0, 0, 0, 3, 1, 0, 0, 0, 0, 5, 1, 0, 0, 0, 0, 7, 1, 0, 0, 0, 0, 9, 1, 0,
		0, 0, 0, 11, 1, 0, 0, 0, 0, 13, 1, 0, 0, 0, 0, 15, 1, 0, 0, 0, 0, 17, 1,
		0, 0, 0, 0, 19, 1, 0, 0, 0, 0, 21, 1, 0, 0, 0, 0, 23, 1, 0, 0, 0, 0, 25,
		1, 0, 0, 0, 0, 27, 1, 0, 0, 0, 0, 29, 1, 0, 0, 0, 0, 31, 1, 0, 0, 0, 0,
		33, 1, 0, 0, 0, 0, 35, 1, 0, 0, 0, 0, 37, 1, 0, 0, 0, 0, 39, 1, 0, 0, 0,
		0, 41, 1, 0, 0, 0, 0, 43, 1, 0, 0, 0, 0, 45, 1, 0, 0, 0, 0, 47, 1, 0, 0,
		0, 0, 49, 1, 0, 0, 0, 0, 51, 1, 0, 0, 0, 0, 53, 1, 0, 0, 0, 0, 55, 1, 0,
		0, 0, 0, 57, 1, 0, 0, 0, 0, 59, 1, 0, 0, 0, 0, 61, 1, 0, 0, 0, 0, 63, 1,
		0, 0, 0, 0, 65, 1, 0, 0, 0, 0, 67, 1, 0, 0, 0, 0, 69, 1, 0, 0, 0, 0, 71,
		1, 0, 0, 0, 0, 73, 1, 0, 0, 0, 0, 75, 1, 0, 0, 0, 0, 77, 1, 0, 0, 0, 0,
		79, 1, 0, 0, 0, 0, 81, 1, 0, 0, 0, 0, 83, 1, 0, 0, 0, 0, 85, 1, 0, 0, 0,
		0, 87, 1, 0, 0, 0, 0, 97, 1, 0, 0, 0, 0, 99, 1, 0, 0, 0, 0, 105, 1, 0,
		0, 0, 0, 113, 1, 0, 0, 0, 0, 123, 1, 0, 0, 0, 0, 125, 1, 0, 0, 0, 0, 127,
		1, 0, 0, 0, 1, 129, 1, 0, 0, 0, 3, 136, 1, 0, 0, 0, 5, 144, 1, 0, 0, 0,
		7, 148, 1, 0, 0, 0, 9, 152, 1, 0, 0, 0, 11, 157, 1, 0, 0, 0, 13, 160, 1,
		0, 0, 0, 15, 163, 1, 0, 0, 0, 17, 167, 1, 0, 0, 0, 19, 171, 1, 0, 0, 0,
		21, 175, 1, 0, 0, 0, 23, 179, 1, 0, 0, 0, 25, 183, 1, 0, 0, 0, 27, 187,
		1, 0, 0, 0, 29, 192, 1, 0, 0, 0, 31, 196, 1, 0, 0, 0, 33, 200, 1, 0, 0,
		0, 35, 204, 1, 0, 0, 0, 37, 208, 1, 0, 0, 0, 39, 213, 1, 0, 0, 0, 41, 220,
		1, 0, 0, 0, 43, 227, 1, 0, 0, 0, 45, 233, 1, 0, 0, 0, 47, 238, 1, 0, 0,
		0, 49, 246, 1, 0, 0, 0, 51, 250, 1, 0, 0, 0, 53, 254, 1, 0, 0, 0, 55, 258,
		1, 0, 0, 0, 57, 262, 1, 0, 0, 0, 59, 264, 1, 0, 0, 0, 61, 266, 1, 0, 0,
		0, 63, 268, 1, 0, 0, 0, 65, 270, 1, 0, 0, 0, 67, 272, 1, 0, 0, 0, 69, 274,
		1, 0, 0, 0, 71, 276, 1, 0, 0, 0, 73, 278, 1, 0, 0, 0, 75, 280, 1, 0, 0,
		0, 77, 282, 1, 0, 0, 0, 79, 284, 1, 0, 0, 0, 81, 286, 1, 0, 0, 0, 83, 288,
		1, 0, 0, 0, 85, 290, 1, 0, 0, 0, 87, 308, 1, 0, 0, 0, 89, 314, 1, 0, 0,
		0, 91, 316, 1, 0, 0, 0, 93, 321, 1, 0, 0, 0, 95, 326, 1, 0, 0, 0, 97, 338,
		1, 0, 0, 0, 99, 364, 1, 0, 0, 0, 101, 366, 1, 0, 0, 0, 103, 374, 1, 0,
		0, 0, 105, 381, 1, 0, 0, 0, 107, 383, 1, 0, 0, 0, 109, 390, 1, 0, 0, 0,
		111, 397, 1, 0, 0, 0, 113, 404, 1, 0, 0, 0, 115, 412, 1, 0, 0, 0, 117,
		414, 1, 0, 0, 0, 119, 416, 1, 0, 0, 0, 121, 418, 1, 0, 0, 0, 123, 421,
		1, 0, 0, 0, 125, 427, 1, 0, 0, 0, 127, 438, 1, 0, 0, 0, 129, 130, 5, 105,
		0, 0, 130, 131, 5, 109, 0, 0, 131, 132, 5, 112, 0, 0, 132, 133, 5, 111,
		0, 0, 133, 134, 5, 114, 0, 0, 134, 135, 5, 116, 0, 0, 135, 2, 1, 0, 0,
		0, 136, 137, 5, 112, 0, 0, 137, 138, 5, 97, 0, 0, 138, 139, 5, 99, 0, 0,
		139, 140, 5, 107, 0, 0, 140, 141, 5, 97, 0, 0, 141, 142, 5, 103, 0, 0,
		142, 143, 5, 101, 0, 0, 143, 4, 1, 0, 0, 0, 144, 145, 5, 108, 0, 0, 145,
		146, 5, 115, 0, 0, 146, 147, 5, 116, 0, 0, 147, 6, 1, 0, 0, 0, 148, 149,
		5, 109, 0, 0, 149, 150, 5, 97, 0, 0, 150, 151, 5, 112, 0, 0, 151, 8, 1,
		0, 0, 0, 152, 153, 5, 98, 0, 0, 153, 154, 5, 111, 0, 0, 154, 155, 5, 111,
		0, 0, 155, 156, 5, 108, 0, 0, 156, 10, 1, 0, 0, 0, 157, 158, 5, 105, 0,
		0, 158, 159, 5, 56, 0, 0, 159, 12, 1, 0, 0, 0, 160, 161, 5, 117, 0, 0,
		161, 162, 5, 56, 0, 0, 162, 14, 1, 0, 0, 0, 163, 164, 5, 105, 0, 0, 164,
		165, 5, 49, 0, 0, 165, 166, 5, 54, 0, 0, 166, 16, 1, 0, 0, 0, 167, 168,
		5, 117, 0, 0, 168, 169, 5, 49, 0, 0, 169, 170, 5, 54, 0, 0, 170, 18, 1,
		0, 0, 0, 171, 172, 5, 105, 0, 0, 172, 173, 5, 51, 0, 0, 173, 174, 5, 50,
		0, 0, 174, 20, 1, 0, 0, 0, 175, 176, 5, 117, 0, 0, 176, 177, 5, 51, 0,
		0, 177, 178, 5, 50, 0, 0, 178, 22, 1, 0, 0, 0, 179, 180, 5, 115, 0, 0,
		180, 181, 5, 51, 0, 0, 181, 182, 5, 50, 0, 0, 182, 24, 1, 0, 0, 0, 183,
		184, 5, 102, 0, 0, 184, 185, 5, 51, 0, 0, 185, 186, 5, 50, 0, 0, 186, 26,
		1, 0, 0, 0, 187, 188, 5, 115, 0, 0, 188, 189, 5, 102, 0, 0, 189, 190, 5,
		51, 0, 0, 190, 191, 5, 50, 0, 0, 191, 28, 1, 0, 0, 0, 192, 193, 5, 105,
		0, 0, 193, 194, 5, 54, 0, 0, 194, 195, 5, 52, 0, 0, 195, 30, 1, 0, 0, 0,
		196, 197, 5, 117, 0, 0, 197, 198, 5, 54, 0, 0, 198, 199, 5, 52, 0, 0, 199,
		32, 1, 0, 0, 0, 200, 201, 5, 115, 0, 0, 201, 202, 5, 54, 0, 0, 202, 203,
		5, 52, 0, 0, 203, 34, 1, 0, 0, 0, 204, 205, 5, 102, 0, 0, 205, 206, 5,
		54, 0, 0, 206, 207, 5, 52, 0, 0, 207, 36, 1, 0, 0, 0, 208, 209, 5, 115,
		0, 0, 209, 210, 5, 102, 0, 0, 210, 211, 5, 54, 0, 0, 211, 212, 5, 52, 0,
		0, 212, 38, 1, 0, 0, 0, 213, 214, 5, 115, 0, 0, 214, 215, 5, 116, 0, 0,
		215, 216, 5, 114, 0, 0, 216, 217, 5, 105, 0, 0, 217, 218, 5, 110, 0, 0,
		218, 219, 5, 103, 0, 0, 219, 40, 1, 0, 0, 0, 220, 221, 5, 100, 0, 0, 221,
		222, 5, 111, 0, 0, 222, 223, 5, 117, 0, 0, 223, 224, 5, 98, 0, 0, 224,
		225, 5, 108, 0, 0, 225, 226, 5, 101, 0, 0, 226, 42, 1, 0, 0, 0, 227, 228,
		5, 102, 0, 0, 228, 229, 5, 108, 0, 0, 229, 230, 5, 111, 0, 0, 230, 231,
		5, 97, 0, 0, 231, 232, 5, 116, 0, 0, 232, 44, 1, 0, 0, 0, 233, 234, 5,
		101, 0, 0, 234, 235, 5, 110, 0, 0, 235, 236, 5, 117, 0, 0, 236, 237, 5,
		109, 0, 0, 237, 46, 1, 0, 0, 0, 238, 239, 5, 109, 0, 0, 239, 240, 5, 101,
		0, 0, 240, 241, 5, 115, 0, 0, 241, 242, 5, 115, 0, 0, 242, 243, 5, 97,
		0, 0, 243, 244, 5, 103, 0, 0, 244, 245, 5, 101, 0, 0, 245, 48, 1, 0, 0,
		0, 246, 247, 5, 101, 0, 0, 247, 248, 5, 120, 0, 0, 248, 249, 5, 116, 0,
		0, 249, 50, 1, 0, 0, 0, 250, 251, 5, 115, 0, 0, 251, 252, 5, 101, 0, 0,
		252, 253, 5, 116, 0, 0, 253, 52, 1, 0, 0, 0, 254, 255, 5, 97, 0, 0, 255,
		256, 5, 114, 0, 0, 256, 257, 5, 114, 0, 0, 257, 54, 1, 0, 0, 0, 258, 259,
		5, 100, 0, 0, 259, 260, 5, 102, 0, 0, 260, 261, 5, 116, 0, 0, 261, 56,
		1, 0, 0, 0, 262, 263, 5, 59, 0, 0, 263, 58, 1, 0, 0, 0, 264, 265, 5, 61,
		0, 0, 265, 60, 1, 0, 0, 0, 266, 267, 5, 40, 0, 0, 267, 62, 1, 0, 0, 0,
		268, 269, 5, 41, 0, 0, 269, 64, 1, 0, 0, 0, 270, 271, 5, 91, 0, 0, 271,
		66, 1, 0, 0, 0, 272, 273, 5, 93, 0, 0, 273, 68, 1, 0, 0, 0, 274, 275, 5,
		123, 0, 0, 275, 70, 1, 0, 0, 0, 276, 277, 5, 125, 0, 0, 277, 72, 1, 0,
		0, 0, 278, 279, 5, 60, 0, 0, 279, 74, 1, 0, 0, 0, 280, 281, 5, 62, 0, 0,
		281, 76, 1, 0, 0, 0, 282, 283, 5, 46, 0, 0, 283, 78, 1, 0, 0, 0, 284, 285,
		5, 44, 0, 0, 285, 80, 1, 0, 0, 0, 286, 287, 5, 58, 0, 0, 287, 82, 1, 0,
		0, 0, 288, 289, 5, 43, 0, 0, 289, 84, 1, 0, 0, 0, 290, 291, 5, 45, 0, 0,
		291, 86, 1, 0, 0, 0, 292, 296, 5, 39, 0, 0, 293, 295, 3, 89, 44, 0, 294,
		293, 1, 0, 0, 0, 295, 298, 1, 0, 0, 0, 296, 297, 1, 0, 0, 0, 296, 294,
		1, 0, 0, 0, 297, 299, 1, 0, 0, 0, 298, 296, 1, 0, 0, 0, 299, 309, 5, 39,
		0, 0, 300, 304, 5, 34, 0, 0, 301, 303, 3, 89, 44, 0, 302, 301, 1, 0, 0,
		0, 303, 306, 1, 0, 0, 0, 304, 305, 1, 0, 0, 0, 304, 302, 1, 0, 0, 0, 305,
		307, 1, 0, 0, 0, 306, 304, 1, 0, 0, 0, 307, 309, 5, 34, 0, 0, 308, 292,
		1, 0, 0, 0, 308, 300, 1, 0, 0, 0, 309, 88, 1, 0, 0, 0, 310, 315, 3, 91,
		45, 0, 311, 315, 3, 93, 46, 0, 312, 315, 3, 95, 47, 0, 313, 315, 8, 0,
		0, 0, 314, 310, 1, 0, 0, 0, 314, 311, 1, 0, 0, 0, 314, 312, 1, 0, 0, 0,
		314, 313, 1, 0, 0, 0, 315, 90, 1, 0, 0, 0, 316, 317, 5, 92, 0, 0, 317,
		318, 7, 1, 0, 0, 318, 319, 3, 121, 60, 0, 319, 320, 3, 121, 60, 0, 320,
		92, 1, 0, 0, 0, 321, 322, 5, 92, 0, 0, 322, 323, 3, 119, 59, 0, 323, 324,
		3, 119, 59, 0, 324, 325, 3, 119, 59, 0, 325, 94, 1, 0, 0, 0, 326, 327,
		5, 92, 0, 0, 327, 328, 7, 2, 0, 0, 328, 96, 1, 0, 0, 0, 329, 330, 5, 116,
		0, 0, 330, 331, 5, 114, 0, 0, 331, 332, 5, 117, 0, 0, 332, 339, 5, 101,
		0, 0, 333, 334, 5, 102, 0, 0, 334, 335, 5, 97, 0, 0, 335, 336, 5, 108,
		0, 0, 336, 337, 5, 115, 0, 0, 337, 339, 5, 101, 0, 0, 338, 329, 1, 0, 0,
		0, 338, 333, 1, 0, 0, 0, 339, 98, 1, 0, 0, 0, 340, 341, 3, 103, 51, 0,
		341, 343, 3, 77, 38, 0, 342, 344, 3, 103, 51, 0, 343, 342, 1, 0, 0, 0,
		343, 344, 1, 0, 0, 0, 344, 346, 1, 0, 0, 0, 345, 347, 3, 101, 50, 0, 346,
		345, 1, 0, 0, 0, 346, 347, 1, 0, 0, 0, 347, 357, 1, 0, 0, 0, 348, 349,
		3, 103, 51, 0, 349, 350, 3, 101, 50, 0, 350, 357, 1, 0, 0, 0, 351, 352,
		3, 77, 38, 0, 352, 354, 3, 103, 51, 0, 353, 355, 3, 101, 50, 0, 354, 353,
		1, 0, 0, 0, 354, 355, 1, 0, 0, 0, 355, 357, 1, 0, 0, 0, 356, 340, 1, 0,
		0, 0, 356, 348, 1, 0, 0, 0, 356, 351, 1, 0, 0, 0, 357, 365, 1, 0, 0, 0,
		358, 359, 5, 105, 0, 0, 359, 360, 5, 110, 0, 0, 360, 365, 5, 102, 0, 0,
		361, 362, 5, 110, 0, 0, 362, 363, 5, 97, 0, 0, 363, 365, 5, 110, 0, 0,
		364, 356, 1, 0, 0, 0, 364, 358, 1, 0, 0, 0, 364, 361, 1, 0, 0, 0, 365,
		100, 1, 0, 0, 0, 366, 369, 7, 3, 0, 0, 367, 370, 3, 83, 41, 0, 368, 370,
		3, 85, 42, 0, 369, 367, 1, 0, 0, 0, 369, 368, 1, 0, 0, 0, 369, 370, 1,
		0, 0, 0, 370, 371, 1, 0, 0, 0, 371, 372, 3, 103, 51, 0, 372, 102, 1, 0,
		0, 0, 373, 375, 3, 117, 58, 0, 374, 373, 1, 0, 0, 0, 375, 376, 1, 0, 0,
		0, 376, 374, 1, 0, 0, 0, 376, 377, 1, 0, 0, 0, 377, 104, 1, 0, 0, 0, 378,
		382, 3, 107, 53, 0, 379, 382, 3, 109, 54, 0, 380, 382, 3, 111, 55, 0, 381,
		378, 1, 0, 0, 0, 381, 379, 1, 0, 0, 0, 381, 380, 1, 0, 0, 0, 382, 106,
		1, 0, 0, 0, 383, 387, 7, 4, 0, 0, 384, 386, 3, 117, 58, 0, 385, 384, 1,
		0, 0, 0, 386, 389, 1, 0, 0, 0, 387, 385, 1, 0, 0, 0, 387, 388, 1, 0, 0,
		0, 388, 108, 1, 0, 0, 0, 389, 387, 1, 0, 0, 0, 390, 394, 5, 48, 0, 0, 391,
		393, 3, 119, 59, 0, 392, 391, 1, 0, 0, 0, 393, 396, 1, 0, 0, 0, 394, 392,
		1, 0, 0, 0, 394, 395, 1, 0, 0, 0, 395, 110, 1, 0, 0, 0, 396, 394, 1, 0,
		0, 0, 397, 398, 5, 48, 0, 0, 398, 400, 7, 1, 0, 0, 399, 401, 3, 121, 60,
		0, 400, 399, 1, 0, 0, 0, 401, 402, 1, 0, 0, 0, 402, 400, 1, 0, 0, 0, 402,
		403, 1, 0, 0, 0, 403, 112, 1, 0, 0, 0, 404, 409, 3, 115, 57, 0, 405, 408,
		3, 115, 57, 0, 406, 408, 3, 117, 58, 0, 407, 405, 1, 0, 0, 0, 407, 406,
		1, 0, 0, 0, 408, 411, 1, 0, 0, 0, 409, 407, 1, 0, 0, 0, 409, 410, 1, 0,
		0, 0, 410, 114, 1, 0, 0, 0, 411, 409, 1, 0, 0, 0, 412, 413, 7, 5, 0, 0,
		413, 116, 1, 0, 0, 0, 414, 415, 7, 6, 0, 0, 415, 118, 1, 0, 0, 0, 416,
		417, 7, 7, 0, 0, 417, 120, 1, 0, 0, 0, 418, 419, 7, 8, 0, 0, 419, 122,
		1, 0, 0, 0, 420, 422, 7, 9, 0, 0, 421, 420, 1, 0, 0, 0, 422, 423, 1, 0,
		0, 0, 423, 421, 1, 0, 0, 0, 423, 424, 1, 0, 0, 0, 424, 425, 1, 0, 0, 0,
		425, 426, 6, 61, 0, 0, 426, 124, 1, 0, 0, 0, 427, 428, 5, 47, 0, 0, 428,
		429, 5, 47, 0, 0, 429, 433, 1, 0, 0, 0, 430, 432, 8, 10, 0, 0, 431, 430,
		1, 0, 0, 0, 432, 435, 1, 0, 0, 0, 433, 431, 1, 0, 0, 0, 433, 434, 1, 0,
		0, 0, 434, 436, 1, 0, 0, 0, 435, 433, 1, 0, 0, 0, 436, 437, 6, 62, 1, 0,
		437, 126, 1, 0, 0, 0, 438, 439, 5, 47, 0, 0, 439, 440, 5, 42, 0, 0, 440,
		444, 1, 0, 0, 0, 441, 443, 9, 0, 0, 0, 442, 441, 1, 0, 0, 0, 443, 446,
		1, 0, 0, 0, 444, 445, 1, 0, 0, 0, 444, 442, 1, 0, 0, 0, 445, 447, 1, 0,
		0, 0, 446, 444, 1, 0, 0, 0, 447, 448, 5, 42, 0, 0, 448, 449, 5, 47, 0,
		0, 449, 450, 1, 0, 0, 0, 450, 451, 6, 63, 1, 0, 451, 128, 1, 0, 0, 0, 22,
		0, 296, 304, 308, 314, 338, 343, 346, 354, 356, 364, 369, 376, 381, 387,
		394, 402, 407, 409, 423, 433, 444, 2, 6, 0, 0, 0, 1, 0,
	}
	deserializer := antlr.NewATNDeserializer(nil)
	staticData.atn = deserializer.Deserialize(staticData.serializedATN)
	atn := staticData.atn
	staticData.decisionToDFA = make([]*antlr.DFA, len(atn.DecisionToState))
	decisionToDFA := staticData.decisionToDFA
	for index, state := range atn.DecisionToState {
		decisionToDFA[index] = antlr.NewDFA(state, index)
	}
}

// ProtobjLexerInit initializes any static state used to implement ProtobjLexer. By default the
// static state used to implement the lexer is lazily initialized during the first call to
// NewProtobjLexer(). You can call this function if you wish to initialize the static state ahead
// of time.
func ProtobjLexerInit() {
	staticData := &protobjlexerLexerStaticData
	staticData.once.Do(protobjlexerLexerInit)
}

// NewProtobjLexer produces a new lexer instance for the optional input antlr.CharStream.
func NewProtobjLexer(input antlr.CharStream) *ProtobjLexer {
	ProtobjLexerInit()
	l := new(ProtobjLexer)
	l.BaseLexer = antlr.NewBaseLexer(input)
	staticData := &protobjlexerLexerStaticData
	l.Interpreter = antlr.NewLexerATNSimulator(l, staticData.atn, staticData.decisionToDFA, staticData.predictionContextCache)
	l.channelNames = staticData.channelNames
	l.modeNames = staticData.modeNames
	l.RuleNames = staticData.ruleNames
	l.LiteralNames = staticData.literalNames
	l.SymbolicNames = staticData.symbolicNames
	l.GrammarFileName = "Protobj.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// ProtobjLexer tokens.
const (
	ProtobjLexerIMPORT       = 1
	ProtobjLexerPACKAGE      = 2
	ProtobjLexerREPEATED     = 3
	ProtobjLexerMAP          = 4
	ProtobjLexerBOOL         = 5
	ProtobjLexerI8           = 6
	ProtobjLexerU8           = 7
	ProtobjLexerI16          = 8
	ProtobjLexerU16          = 9
	ProtobjLexerI32          = 10
	ProtobjLexerU32          = 11
	ProtobjLexerS32          = 12
	ProtobjLexerF32          = 13
	ProtobjLexerSF32         = 14
	ProtobjLexerI64          = 15
	ProtobjLexerU64          = 16
	ProtobjLexerS64          = 17
	ProtobjLexerF64          = 18
	ProtobjLexerSF64         = 19
	ProtobjLexerSTRING       = 20
	ProtobjLexerDOUBLE       = 21
	ProtobjLexerFLOAT        = 22
	ProtobjLexerENUM         = 23
	ProtobjLexerMESSAGE      = 24
	ProtobjLexerEXTEND       = 25
	ProtobjLexerSET          = 26
	ProtobjLexerARRAY        = 27
	ProtobjLexerDEFAULT      = 28
	ProtobjLexerSEMI         = 29
	ProtobjLexerEQ           = 30
	ProtobjLexerLP           = 31
	ProtobjLexerRP           = 32
	ProtobjLexerLB           = 33
	ProtobjLexerRB           = 34
	ProtobjLexerLC           = 35
	ProtobjLexerRC           = 36
	ProtobjLexerLT           = 37
	ProtobjLexerGT           = 38
	ProtobjLexerDOT          = 39
	ProtobjLexerCOMMA        = 40
	ProtobjLexerCOLON        = 41
	ProtobjLexerPLUS         = 42
	ProtobjLexerMINUS        = 43
	ProtobjLexerSTR_LIT      = 44
	ProtobjLexerBOOL_LIT     = 45
	ProtobjLexerFLOAT_LIT    = 46
	ProtobjLexerINT_LIT      = 47
	ProtobjLexerIDENTIFIER   = 48
	ProtobjLexerWS           = 49
	ProtobjLexerLINE_COMMENT = 50
	ProtobjLexerCOMMENT      = 51
)
